class Node {
  constructor(val) {
    this.val = val;
    this.left = null;
    this.right = null;
  }
  insert(val) {
    if(val < this.val && !this.left) {
      // create a new node at the left of the tree
      this.left = new Node(val);
    }
    else if(val < this.val && this.left) {
      this.left.insert(val)
    }
    else if(val > this.val && !this.right) {
      this.right = new Node(val)
    } 
    else if(val > this.val && this.right) {
      this.right.insert(val)
    }
  }
  search(element){   
    if(this.val === element) {
      return true
    } else if(this.val < element && this.left){
      return this.left.search(element)
    } else if(this.val > element && this.right) {
      return this.right.search(element)
    }
    return false
  }
}
// create a bst with 3 nodes. (Root node contains the value 10)
let bst = new Node(10);
bst.insert(9)
bst.insert(6)
console.log(bst)
console.log(bst.search(9)) // prints true
