// Iterative method. Time Complexity O(n), Space complexity O(1)
const ll = {
    val: 5,
    next: {
        val: 6,
        next: {
            val:7,
            next: null
        }
    }
}
function reverseLinkedList(head){
    let prev = null;
    let next = null;

    while(head !== null){
        next = head.next;
        head.next = prev;
        prev = head;
        head = next;
    }

    return prev;

}
console.log(reverseLinkedList(ll))

=====================================
//RECURSIVE
function reverse(head) {
  if (!head || !head.next) {
    return head;
  }
  let tmp = reverse(head.next);
  head.next.next = head;
  head.next = null;
  return tmp;
}
console.log(reverse(ll))
